-- Project Name : postal_code_sync
-- Date/Time    : 2025/08/28 22:32:42
-- Author       : ted
-- RDBMS Type   : PostgreSQL
-- Application  : A5:SQL Mk-2

/*
  << 注意！！ >>
  BackupToTempTable, RestoreFromTempTable疑似命令が付加されています。
  これにより、drop table, create table 後もデータが残ります。
  この機能は一時的に $$TableName のような一時テーブルを作成します。
  この機能は A5:SQL Mk-2でのみ有効であることに注意してください。
*/

-- ext.ingestion_files
-- * BackupToTempTable
DROP TABLE if exists ext.ingestion_files CASCADE;

-- * RestoreFromTempTable
CREATE TABLE ext.ingestion_files (
  file_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY
  , run_id BIGINT DEFAULT 0 NOT NULL
  , source_uri TEXT DEFAULT '' NOT NULL
  , file_name TEXT DEFAULT '' NOT NULL
  , size_bytes BIGINT DEFAULT 0 NOT NULL
  , hash_sha256 character(64) DEFAULT '' NOT NULL
  , CONSTRAINT ingestion_files_PKC PRIMARY KEY (file_id)
) ;

-- ext.ingestion_runs
-- * BackupToTempTable
DROP TABLE if exists ext.ingestion_runs CASCADE;

-- * RestoreFromTempTable
CREATE TABLE ext.ingestion_runs (
  run_id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY
  , source_system TEXT DEFAULT '' NOT NULL
  , version_date date
  , mode TEXT DEFAULT '' NOT NULL
  , started_at timestamp DEFAULT CURRENT_TIMESTAMP
  , finished_at timestamp
  , status TEXT DEFAULT '' NOT NULL
  , landed_rows BIGINT DEFAULT 0 NOT NULL
  , notes TEXT DEFAULT '' NOT NULL
  , errors JSONB DEFAULT '{}' NOT NULL
  , CONSTRAINT ingestion_runs_PKC PRIMARY KEY (run_id)
) ;

-- ext.postal_codes
-- * BackupToTempTable
DROP TABLE if exists ext.postal_codes CASCADE;

-- * RestoreFromTempTable
CREATE TABLE ext.postal_codes (
  id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY
  , postal_code character(7) DEFAULT '' NOT NULL
  , prefecture_katakana TEXT DEFAULT '' NOT NULL
  , city_katakana TEXT DEFAULT '' NOT NULL
  , town_katakana TEXT DEFAULT '' NOT NULL
  , prefecture TEXT DEFAULT '' NOT NULL
  , city TEXT DEFAULT '' NOT NULL
  , town TEXT DEFAULT '' NOT NULL
  , run_id BIGINT
  , CONSTRAINT postal_codes_PKC PRIMARY KEY (id)
) ;

-- ext.postal_codes_landed
-- * BackupToTempTable
DROP TABLE if exists ext.postal_codes_landed CASCADE;

-- * RestoreFromTempTable
CREATE TABLE ext.postal_codes_landed (
  local_government_code TEXT NOT NULL
  , old_zip_code5 TEXT DEFAULT '' NOT NULL
  , zip_code7 TEXT DEFAULT '' NOT NULL
  , prefecture_katakana TEXT DEFAULT '' NOT NULL
  , city_katakana TEXT DEFAULT '' NOT NULL
  , town_katakana TEXT DEFAULT '' NOT NULL
  , prefecture TEXT DEFAULT '' NOT NULL
  , city TEXT DEFAULT '' NOT NULL
  , town TEXT DEFAULT '' NOT NULL
  , is_multi_zip BOOLEAN DEFAULT FALSE NOT NULL
  , is_koaza BOOLEAN DEFAULT FALSE NOT NULL
  , is_chome BOOLEAN DEFAULT FALSE NOT NULL
  , is_multi_town BOOLEAN DEFAULT FALSE NOT NULL
  , update_status TEXT DEFAULT '' NOT NULL
  , update_reason TEXT DEFAULT '' NOT NULL
) ;

COMMENT ON TABLE ext.ingestion_files IS 'ext.ingestion_files';
COMMENT ON COLUMN ext.ingestion_files.file_id IS '取込ファイルID';
COMMENT ON COLUMN ext.ingestion_files.run_id IS '取込実行ID';
COMMENT ON COLUMN ext.ingestion_files.source_uri IS '取得元URI';
COMMENT ON COLUMN ext.ingestion_files.file_name IS 'ファイル名';
COMMENT ON COLUMN ext.ingestion_files.size_bytes IS 'サイズ(バイト)';
COMMENT ON COLUMN ext.ingestion_files.hash_sha256 IS 'SHA-256ハッシュ';

COMMENT ON TABLE ext.ingestion_runs IS 'ext.ingestion_runs';
COMMENT ON COLUMN ext.ingestion_runs.run_id IS '取込実行ID';
COMMENT ON COLUMN ext.ingestion_runs.source_system IS '取込元システム';
COMMENT ON COLUMN ext.ingestion_runs.version_date IS 'データ版日';
COMMENT ON COLUMN ext.ingestion_runs.mode IS '取込モード';
COMMENT ON COLUMN ext.ingestion_runs.started_at IS '開始日時';
COMMENT ON COLUMN ext.ingestion_runs.finished_at IS '終了日時';
COMMENT ON COLUMN ext.ingestion_runs.status IS 'ステータス';
COMMENT ON COLUMN ext.ingestion_runs.landed_rows IS '取込件数';
COMMENT ON COLUMN ext.ingestion_runs.notes IS '備考';
COMMENT ON COLUMN ext.ingestion_runs.errors IS 'エラー詳細';

COMMENT ON TABLE ext.postal_codes IS 'ext.postal_codes';
COMMENT ON COLUMN ext.postal_codes.id IS 'id';
COMMENT ON COLUMN ext.postal_codes.postal_code IS 'postal_code';
COMMENT ON COLUMN ext.postal_codes.prefecture_katakana IS 'prefecture_katakana';
COMMENT ON COLUMN ext.postal_codes.city_katakana IS 'city_katakana';
COMMENT ON COLUMN ext.postal_codes.town_katakana IS 'town_katakana';
COMMENT ON COLUMN ext.postal_codes.prefecture IS 'prefecture';
COMMENT ON COLUMN ext.postal_codes.city IS 'city';
COMMENT ON COLUMN ext.postal_codes.town IS 'town';
COMMENT ON COLUMN ext.postal_codes.run_id IS 'run_id';

COMMENT ON TABLE ext.postal_codes_landed IS 'ext.postal_codes_landed:日本郵便の郵便番号CSV(UTF-8)を取り込むための一時テーブルです。
データが不要なら処理後に TRUNCATE 推奨。
取込用テーブルが増えた場合は etl スキーマへの移行を検討します。';
COMMENT ON COLUMN ext.postal_codes_landed.local_government_code IS '全国地方公共団体コード:JIS X0401、X0402';
COMMENT ON COLUMN ext.postal_codes_landed.old_zip_code5 IS '旧郵便番号(5桁)';
COMMENT ON COLUMN ext.postal_codes_landed.zip_code7 IS '郵便番号(7桁)';
COMMENT ON COLUMN ext.postal_codes_landed.prefecture_katakana IS '都道府県名(カナ)';
COMMENT ON COLUMN ext.postal_codes_landed.city_katakana IS '市区町村名(カナ)';
COMMENT ON COLUMN ext.postal_codes_landed.town_katakana IS '町域名(カナ)';
COMMENT ON COLUMN ext.postal_codes_landed.prefecture IS '都道府県名';
COMMENT ON COLUMN ext.postal_codes_landed.city IS '市区町村名';
COMMENT ON COLUMN ext.postal_codes_landed.town IS '町域名';
COMMENT ON COLUMN ext.postal_codes_landed.is_multi_zip IS '複数郵便番号フラグ:一町域が二以上の郵便番号で表される場合の表示（"1": 該当、"0": 該当せず）';
COMMENT ON COLUMN ext.postal_codes_landed.is_koaza IS '小字番地フラグ:小字毎に番地が起番されている町域の表示（"1": 該当、"0": 該当せず）';
COMMENT ON COLUMN ext.postal_codes_landed.is_chome IS '丁目フラグ:丁目を有する町域の場合の表示（"1": 該当、"0": 該当せず）';
COMMENT ON COLUMN ext.postal_codes_landed.is_multi_town IS '複数町域フラグ:一つの郵便番号で二以上の町域を表す場合の表示（"1": 該当、"0": 該当せず）';
COMMENT ON COLUMN ext.postal_codes_landed.update_status IS '更新フラグ:更新の表示（"0": 変更なし、"1": 変更あり、"2": 廃止）';
COMMENT ON COLUMN ext.postal_codes_landed.update_reason IS '更新理由:変更理由（"0": 変更なし、"1": 市政等施行、"2": 住居表示の実施、"3": 区画整理、"4": 郵便区調整等、"5": 訂正、"6": 廃止）';

